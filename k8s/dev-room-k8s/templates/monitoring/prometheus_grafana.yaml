apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-monitoring

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: kubernetes-monitoring

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kubernetes-monitoring

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: kubernetes-monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval:     5s

    scrape_configs:
      - job_name: 'node_exporter'
        static_configs:
          - targets: ['localhost:9100']

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: kubernetes-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
          - "--web.enable-lifecycle"
          - "--web.listen-address=:9090"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
      - name: node-exporter
        image: prom/node-exporter:latest
        args:
          - "--path.procfs=/host/proc"
          - "--path.sysfs=/host/sys"
          - "--collector.systemd"
          - "--collector.processes"
          - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)"
          - "--web.listen-address=:9100"
        volumeMounts:
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/sys
          name: sys
          readOnly: true
        ports:
        - containerPort: 9100
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-server-conf
      - name: prometheus-data
        emptyDir: {}
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: kubernetes-monitoring
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: kubernetes-monitoring

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - services
  - nodes
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: kubernetes-monitoring

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: kubernetes-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        - name: GF_SECURITY_ADMIN_USER
          value: "test"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "test"
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: false
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: kubernetes-monitoring
spec:
  type: LoadBalancer
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: kubernetes-monitoring
data:
  prometheus.yaml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service.kubernetes-monitoring.svc.cluster.local
